{
  "address": "0x62eCb6e24bD7D53112ebF386718D54A33B3c424E",
  "abi": [],
  "transactionHash": "0xc69e9438192f7c7cb2d532412d34206f3b9b1eb8f0a795f76790618b9deb0d2a",
  "receipt": {
    "to": null,
    "from": "0xb631E8650fB4bEfDAe74Ab9f86a9Cb65bC134706",
    "contractAddress": "0x62eCb6e24bD7D53112ebF386718D54A33B3c424E",
    "transactionIndex": 230,
    "gasUsed": "397252",
    "logsBloom": "0x
    "blockHash": "0x90e84391f5679b7c8f6d6d1c23a7f53a382940ffffa62ebf2de707077e5f488e",
    "transactionHash": "0xc69e9438192f7c7cb2d532412d34206f3b9b1eb8f0a795f76790618b9deb0d2a",
    "logs": [],
    "blockNumber": 14652001,
    "cumulativeGasUsed": "24133526",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "de27f886468c32da916e9b1366f1a245",
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibConfig.sol\":\"LibConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/Types.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nlibrary Types {\\n\\n    struct TokenAmount {\\n        IERC20 token;\\n        uint112 amount;\\n    }\\n\\n    //status of order. Only tracked on action from user/miners\\n    enum OrderStatus {\\n        UNDEFINED,\\n        PENDING,\\n        FILLED,\\n        CANCELLED,\\n        PENALIZED\\n    }\\n\\n    struct Order {\\n\\n        //trader that owns the order\\n        address trader;\\n\\n        //the token we are taking as fee\\n        IERC20 feeToken;\\n\\n        //eth price of fee token in 18-decimal units\\n        uint feeTokenETHPrice;\\n\\n        //current price of ETH in USD units\\n        uint ethUSDPrice;\\n\\n        //an estimate of gas to use to fill the order\\n        uint gasEstimate;\\n\\n        //token being offered\\n        TokenAmount input;\\n\\n        //token wanted\\n        TokenAmount output;\\n    }\\n\\n    //============== CONFIG STATE =============/\\n    struct Config {\\n        //dev team address (120b)\\n        address devTeam;\\n\\n        //bps fee expressed as a whole number\\n        uint128 minFee;\\n\\n        //penalty a user faces for removing assets or \\n        //allowances before a trade\\n        uint128 penaltyFee;\\n\\n        //number of blocks to lock stake and order cancellations\\n        uint8 lockoutBlocks;\\n    }\\n\\n    //============== ACCESS STATE =============/\\n    //storage structure of access controls\\n    struct AccessControl {\\n        bool reentrantFlag;\\n        mapping(bytes32 => mapping(address => bool)) roles;\\n    }\\n\\n    //============== INITIALIZATION STATE =============/\\n    struct InitControls {\\n        bool initialized;\\n        bool initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3c8069a1a9ed04c31a67496bdceaeab96382a87df0fa14ee928acacabe13baf2\",\"license\":\"Unlicense\"},\"contracts/libs/LibConfig.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\nimport \\\"../Types.sol\\\";\\n\\nlibrary LibConfig {\\n\\n\\n    function store(Types.Config storage cs, Types.Config memory config) public {\\n        cs.devTeam = config.devTeam;\\n        cs.minFee = config.minFee;\\n        cs.penaltyFee = config.penaltyFee;\\n        cs.lockoutBlocks = config.lockoutBlocks;\\n        require(cs.devTeam != address(0), \\\"Invalid dev team address\\\");\\n    }\\n\\n    function copy(Types.Config storage config) public view returns(Types.Config memory) {\\n        Types.Config memory cs;\\n        cs.devTeam = config.devTeam;\\n        cs.minFee = config.minFee;\\n        cs.penaltyFee = config.penaltyFee;\\n        cs.lockoutBlocks = config.lockoutBlocks;\\n        require(cs.devTeam != address(0), \\\"Invalid dev team address\\\");\\n        return cs;\\n    }\\n    \\n\\n    //============== VIEWS ================/\\n    \\n    function getDevTeam(Types.Config storage _config) external view returns (address) {\\n        return _config.devTeam;\\n    }\\n\\n    function getLockoutBlocks(Types.Config storage _config) external view returns (uint8) {\\n        return _config.lockoutBlocks;\\n    }\\n\\n    function getMinFee(Types.Config storage _config) external view returns (uint128) {\\n        return _config.minFee;\\n    }\\n\\n    function getPenaltyFee(Types.Config storage _config) external view returns (uint128) {\\n        return _config.penaltyFee;\\n    }\\n\\n    //=============== MUTATIONS ============/\\n\\n    function setDevTeam(Types.Config storage _config, address team) external{\\n        _config.devTeam = team;\\n    }\\n\\n    function setLockoutBlocks(Types.Config storage _config, uint8 blocks) external{\\n        _config.lockoutBlocks = blocks;\\n    }\\n\\n    function setMinFee(Types.Config storage _config, uint128 fee) external{\\n        _config.minFee = fee;\\n    }\\n\\n    function setPenaltyFee(Types.Config storage _config, uint128 fee) external{\\n        _config.penaltyFee = fee;\\n    }\\n    \\n}\",\"keccak256\":\"0xaadcf6273e853a6057f400790831a95320c40940ecba17f12c6f13c4625f3136\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x610639610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c806379df73751161007057806379df7375146101585780638fe20a7b1461016b578063bd87145b1461018b578063c2ab03e1146101ab578063e40a1aea146101cb576100a8565b80631d24da6c146100ad57806321cab0c7146100cf5780633ed940e6146100ef57806358e62d58146101185780636d73f0db14610138575b600080fd5b8180156100b957600080fd5b506100cd6100c83660046104d1565b6101eb565b005b8180156100db57600080fd5b506100cd6100ea366004610433565b61020d565b6101026100fd3660046103ec565b6102ab565b60405161010f91906105b4565b60405180910390f35b81801561012457600080fd5b506100cd6101333660046104f5565b6102c2565b61014b6101463660046103ec565b6102db565b60405161010f919061056c565b6101026101663660046103ec565b61034b565b81801561017757600080fd5b506100cd610186366004610404565b61035b565b81801561019757600080fd5b506100cd6101a63660046104d1565b610378565b6101be6101b93660046103ec565b61039d565b60405161010f91906105c8565b6101de6101d93660046103ec565b6103a7565b60405161010f9190610521565b600190910180546001600160801b03928316600160801b029216919091179055565b805182546001600160a01b0319166001600160a01b0391821617808455602083015160018501805460408601516001600160801b03199091166001600160801b03938416178316600160801b9390911692909202919091179055606083015160028501805460ff191660ff909216919091179055166102a75760405162461bcd60e51b815260040161029e90610535565b60405180910390fd5b5050565b60010154600160801b90046001600160801b031690565b600291909101805460ff191660ff909216919091179055565b6102e36103b4565b6102eb6103b4565b82546001600160a01b031680825260018401546001600160801b038082166020850152600160801b909104166040830152600284015460ff1660608301526103455760405162461bcd60e51b815260040161029e90610535565b92915050565b600101546001600160801b031690565b81546001600160a01b0319166001600160a01b0391909116179055565b60019190910180546001600160801b0319166001600160801b03909216919091179055565b6002015460ff1690565b546001600160a01b031690565b60408051608081018252600080825260208201819052918101829052606081019190915290565b803560ff8116811461034557600080fd5b6000602082840312156103fd578081fd5b5035919050565b60008060408385031215610416578081fd5b823591506020830135610428816105d6565b809150509250929050565b60008082840360a0811215610446578283fd5b833592506080601f198201121561045b578182fd5b506040516080810181811067ffffffffffffffff8211171561047b578283fd5b604052602084013561048c816105d6565b8152604084013561049c816105ee565b602082015260608401356104af816105ee565b60408201526104c185608086016103db565b6060820152809150509250929050565b600080604083850312156104e3578182fd5b823591506020830135610428816105ee565b60008060408385031215610507578182fd5b8235915061051884602085016103db565b90509250929050565b6001600160a01b0391909116815260200190565b60208082526018908201527f496e76616c696420646576207465616d20616464726573730000000000000000604082015260600190565b81516001600160a01b031681526020808301516001600160801b03908116918301919091526040808401519091169082015260609182015160ff169181019190915260800190565b6001600160801b0391909116815260200190565b60ff91909116815260200190565b6001600160a01b03811681146105eb57600080fd5b50565b6001600160801b03811681146105eb57600080fdfea2646970667358221220ed3300e37b1acc28c2750f297f3262dc56ca1bf4f54657cfc4a420bcf64fd94c64736f6c63430007000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c806379df73751161007057806379df7375146101585780638fe20a7b1461016b578063bd87145b1461018b578063c2ab03e1146101ab578063e40a1aea146101cb576100a8565b80631d24da6c146100ad57806321cab0c7146100cf5780633ed940e6146100ef57806358e62d58146101185780636d73f0db14610138575b600080fd5b8180156100b957600080fd5b506100cd6100c83660046104d1565b6101eb565b005b8180156100db57600080fd5b506100cd6100ea366004610433565b61020d565b6101026100fd3660046103ec565b6102ab565b60405161010f91906105b4565b60405180910390f35b81801561012457600080fd5b506100cd6101333660046104f5565b6102c2565b61014b6101463660046103ec565b6102db565b60405161010f919061056c565b6101026101663660046103ec565b61034b565b81801561017757600080fd5b506100cd610186366004610404565b61035b565b81801561019757600080fd5b506100cd6101a63660046104d1565b610378565b6101be6101b93660046103ec565b61039d565b60405161010f91906105c8565b6101de6101d93660046103ec565b6103a7565b60405161010f9190610521565b600190910180546001600160801b03928316600160801b029216919091179055565b805182546001600160a01b0319166001600160a01b0391821617808455602083015160018501805460408601516001600160801b03199091166001600160801b03938416178316600160801b9390911692909202919091179055606083015160028501805460ff191660ff909216919091179055166102a75760405162461bcd60e51b815260040161029e90610535565b60405180910390fd5b5050565b60010154600160801b90046001600160801b031690565b600291909101805460ff191660ff909216919091179055565b6102e36103b4565b6102eb6103b4565b82546001600160a01b031680825260018401546001600160801b038082166020850152600160801b909104166040830152600284015460ff1660608301526103455760405162461bcd60e51b815260040161029e90610535565b92915050565b600101546001600160801b031690565b81546001600160a01b0319166001600160a01b0391909116179055565b60019190910180546001600160801b0319166001600160801b03909216919091179055565b6002015460ff1690565b546001600160a01b031690565b60408051608081018252600080825260208201819052918101829052606081019190915290565b803560ff8116811461034557600080fd5b6000602082840312156103fd578081fd5b5035919050565b60008060408385031215610416578081fd5b823591506020830135610428816105d6565b809150509250929050565b60008082840360a0811215610446578283fd5b833592506080601f198201121561045b578182fd5b506040516080810181811067ffffffffffffffff8211171561047b578283fd5b604052602084013561048c816105d6565b8152604084013561049c816105ee565b602082015260608401356104af816105ee565b60408201526104c185608086016103db565b6060820152809150509250929050565b600080604083850312156104e3578182fd5b823591506020830135610428816105ee565b60008060408385031215610507578182fd5b8235915061051884602085016103db565b90509250929050565b6001600160a01b0391909116815260200190565b60208082526018908201527f496e76616c696420646576207465616d20616464726573730000000000000000604082015260600190565b81516001600160a01b031681526020808301516001600160801b03908116918301919091526040808401519091169082015260609182015160ff169181019190915260800190565b6001600160801b0391909116815260200190565b60ff91909116815260200190565b6001600160a01b03811681146105eb57600080fd5b50565b6001600160801b03811681146105eb57600080fdfea2646970667358221220ed3300e37b1acc28c2750f297f3262dc56ca1bf4f54657cfc4a420bcf64fd94c64736f6c63430007000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}